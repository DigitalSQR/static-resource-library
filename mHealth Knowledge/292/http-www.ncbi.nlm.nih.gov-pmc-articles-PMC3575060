<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    
    <head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <!-- AppResources meta begin -->
        <script type="text/javascript">var ncbi_startTime = new Date();</script>
        <!-- AppResources meta end -->
        
        <!-- TemplateResources meta begin -->
        <meta name="paf_template" content="" />

        <!-- TemplateResources meta end -->
        
        <!-- Logger begin -->
        <meta name="ncbi_db" content="pmc" /><meta name="ncbi_pdid" content="article" /><meta name="ncbi_acc" content="" /><meta name="ncbi_domain" content="austmj" /><meta name="ncbi_report" content="record" /><meta name="ncbi_type" content="fulltext" /><meta name="ncbi_objectid" content="" /><meta name="ncbi_pcid" content="/articles/PMC3575060/" /><meta name="ncbi_app" content="pmc" />
        <!-- Logger end -->
        
        <title>Going native (or not): Five questions to ask mobile application developers</title>
        
        <!-- AppResources external_resources begin -->
        <link rel="stylesheet" href="/core/jig/1.14.8/css/jig.min.css" /><script type="text/javascript" src="/core/jig/1.14.8/js/jig.min.js"></script>

        <!-- AppResources external_resources end -->
        
        <!-- Page meta begin -->
        <meta name="robots" content="INDEX,NOFOLLOW,NOARCHIVE" /><link rel="canonical" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3575060/" /><link rel="schema.DC" href="http://purl.org/DC/elements/1.0/" /><meta name="citation_journal_title" content="The Australasian Medical Journal" /><meta name="citation_title" content="Going native (or not): Five questions to ask mobile application developers" /><meta name="citation_authors" content="James White" /><meta name="citation_date" content="2013" /><meta name="citation_issue" content="1" /><meta name="citation_volume" content="6" /><meta name="citation_firstpage" content="7" /><meta name="citation_doi" content="10.4066/AMJ.2013.1576" /><meta name="citation_pmid" content="23424610" /><meta name="DC.Title" content="Going native (or not): Five questions to ask mobile application developers" /><meta name="DC.Type" content="Text" /><meta name="DC.Publisher" content="Australasian Medical Journal" /><meta name="DC.Contributor" content="James White" /><meta name="DC.Date" content="2013" /><meta name="DC.Identifier" content="10.4066/AMJ.2013.1576" /><meta name="DC.Language" content="en" /><meta property="og:title" content="Going native (or not): Five questions to ask mobile application developers" /><meta property="og:type" content="article" /><meta property="og:url" content="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3575060/" /><meta property="og:site_name" content="PubMed Central (PMC)" /><meta property="og:image" content="https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-logo-share.png" /><meta name="twitter:card" content="summary" /><meta name="twitter:site" content="@ncbi" /><link rel="stylesheet" href="/corehtml/pmc/css/3.14.1/pmc.min.css" type="text/css" /><link rel="stylesheet" href="/corehtml/pmc/css/3.14.1/pmc_extras_prnt.min.css" type="text/css" media="print" /><script type="text/javascript" src="/corehtml/pmc/js/common.min.js">//</script><script type="text/javascript" src="/corehtml/pmc/js/NcbiTagServer.min.js">//</script><meta name="citationexporter" content="backend:'https://api.ncbi.nlm.nih.gov/lit/ctxp/v1/pmc/'" /><script type="text/javascript" src="https://www.ncbi.nlm.nih.gov/corehtml/pmc/ctxp/jquery.citationexporter.min.js">//</script><link rel="stylesheet" href="https://www.ncbi.nlm.nih.gov/corehtml/pmc/ctxp/citationexporter.css" type="text/css" /><script type="text/javascript" src="/core/mathjax/2.6.1/MathJax.js?config=/corehtml/pmc/js/mathjax-config-classic.3.4.js"></script><script type="text/javascript">window.name="mainwindow";</script><style type="text/css">.pmc-wm {background:transparent repeat-y top left;background-image:url(/corehtml/pmc/pmcgifs/wm-austmj.gif);background-size: auto, contain}</style><style type="text/css">.print-view{display:block}</style><style type="text/css">
        div.pmc_para_cit li.highlight,
        div.pmc_para_cit li.highlight .one_line_source
        { background: #E0E0E0; }
        a.bibr.highlight { background: #E0E0E0; } 
      </style><meta name="cited_in_systematic_reviews" content="" /><link rel="alternate" type="application/epub+zip" href="/pmc/articles/PMC3575060/epub/" /><link rel="alternate" type="application/pdf" href="/pmc/articles/PMC3575060/pdf/AMJ-06-07.pdf" />

        <!-- Page meta end -->
    <link rel="shortcut icon" href="//www.ncbi.nlm.nih.gov/favicon.ico" /><meta name="ncbi_phid" content="CE888174D83964110000000004BA02CB.m_8" />
<meta name='referrer' content='origin-when-cross-origin'/><link type="text/css" rel="stylesheet" href="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/css/3852956/3985586/3808861/4121862/3974050/3917732/251717/4048120/3846471/14534/45193/4113719/3849091/3984811/3751656/4033350/3840896/3577051/3852958/3881636/3579733/4062871/12930/3964959/3855473/4047625/3854974/3854955/4076335/4128070/9685/3549676/3609192/3609193/3609213/3395586/4143404.css" /><link type="text/css" rel="stylesheet" href="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/css/3411343/3882866/4157116.css" media="print" /></head>
    <body class="article">
        <div class="grid">
            <div class="col twelve_col nomargin shadow">
                <!-- System messages like service outage or JS required; this is handled by the TemplateResources portlet -->
                <div class="sysmessages">
                    <noscript>
	<p class="nojs">
	<strong>Warning:</strong>
	The NCBI web site requires JavaScript to function. 
	<a href="/guide/browsers/#enablejs" title="Learn how to enable JavaScript" target="_blank">more...</a>
	</p>
	</noscript>
                </div>
                <!--/.sysmessage-->
                <div class="wrap">
                    <div class="page">
                        <div class="top">
                            <div class="universal_header" id="universal_header"><ul class="inline_list jig-ncbimenu ui-ncbimenu resources_list" id="navcontent"><li class="ui-ncbimenu-item-leaf ui-ncbimenu-item-first ui-helper-reset ui-ncbimenu-item-no-hlt"><a class="ui-ncbimenu-link-first" href="/" role="banner" title="NCBI Home" id="ncbihome" accesskey="1"><span class="offscreen_noflow">NCBI</span><img src="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/img/28977" class="ncbi_logo" title="NCBI" alt="NCBI Logo" /></a></li><li class="offscreen_noflow ui-ncbimenu-item-skip access"><a href="#maincontent" title="Skip to the content" tabindex="0" accesskey="3">Skip to main
                        content</a></li><li class="offscreen_noflow ui-ncbimenu-item-skip access"><a href="#navcontent" title="Skip to the navigation" tabindex="0" accesskey="4">Skip to
                        navigation</a></li><li id="resource-menu" class="topmenu ui-helper-reset ui-ncbimenu-item-first ui-helper-reset"><a class="ui-ncbimenu-first-link-has-submenu ui-ncbimenu-link-first topanchor expandDown" href="/static/header_footer_ajax/submenu/#resources">Resources</a></li><li id="all-howtos-menu" class="topmenu ui-helper-reset ui-ncbimenu-item-first"><a class="ui-ncbimenu-first-link-has-submenu ui-ncbimenu-link-first topanchor expandDown" href="/static/header_footer_ajax/submenu/#howto">How To</a></li><li class="offscreen_noflow ui-ncbimenu-item-skip access"><a href="/guide/browsers/#accesskeys" title="About My NCBI Accesskeys" tabindex="0" accesskey="0">About NCBI Accesskeys</a></li></ul><div class="myncbi"><span id="myncbiusername" style="display:none"><a href="/account/settings/" id="mnu" title="Edit account settings"></a></span><a accesskey="2" href="/myncbi/" id="myncbi" style="display:none">My NCBI</a><a href="/account/" id="sign_in">Sign in to NCBI</a><a href="/account/signout/" id="sign_out" style="display:none">Sign Out</a></div></div>
                            <div class="header">
    <div class="res_logo">
  <h1 class="img_logo"><a href="/pmc/" class="pmc_logo offscreen">PMC</a></h1>
  <div class="NLMLogo">
    <a href="https://www.nlm.nih.gov/" title="US National Library of Medicine">US National Library of Medicine</a>
    <br />
    <a href="https://www.nih.gov/" title="National Institutes of Health">National Institutes of Health</a>
  </div>
</div>
    <div class="search"><form method="get" action="/pmc/"><div class="search_form"><label for="database" class="offscreen_noflow">Search database</label><select id="database"><optgroup label="Recent"><option value="pmc" selected="selected" class="last" data-ac_dict="pmc-search-autocomplete">PMC</option></optgroup><optgroup label="All"><option value="gquery">All Databases</option><option value="assembly">Assembly</option><option value="biocollections">Biocollections</option><option value="bioproject">BioProject</option><option value="biosample">BioSample</option><option value="biosystems">BioSystems</option><option value="books">Books</option><option value="clinvar">ClinVar</option><option value="cdd">Conserved Domains</option><option value="gap">dbGaP</option><option value="dbvar">dbVar</option><option value="gene">Gene</option><option value="genome">Genome</option><option value="gds">GEO DataSets</option><option value="geoprofiles">GEO Profiles</option><option value="gtr">GTR</option><option value="homologene">HomoloGene</option><option value="ipg">Identical Protein Groups</option><option value="medgen">MedGen</option><option value="mesh">MeSH</option><option value="ncbisearch">NCBI Web Site</option><option value="nlmcatalog">NLM Catalog</option><option value="nuccore">Nucleotide</option><option value="omim">OMIM</option><option value="pmc" data-ac_dict="pmc-search-autocomplete">PMC</option><option value="popset">PopSet</option><option value="probe">Probe</option><option value="protein">Protein</option><option value="proteinclusters">Protein Clusters</option><option value="pcassay">PubChem BioAssay</option><option value="pccompound">PubChem Compound</option><option value="pcsubstance">PubChem Substance</option><option value="pubmed">PubMed</option><option value="snp">SNP</option><option value="sparcle">Sparcle</option><option value="sra">SRA</option><option value="structure">Structure</option><option value="taxonomy">Taxonomy</option><option value="toolkit">ToolKit</option><option value="toolkitall">ToolKitAll</option><option value="toolkitbookgh">ToolKitBookgh</option></optgroup></select><div class="nowrap"><label for="term" class="offscreen_noflow" accesskey="/">Search term</label><div class="nowrap"><input type="text" name="term" id="term" title="Search PMC. Use up and down arrows to choose an item from the autocomplete." value="" class="jig-ncbiclearbutton jig-ncbiautocomplete" data-jigconfig="dictionary:'pmc-search-autocomplete',disableUrl:'NcbiSearchBarAutoComplCtrl'" autocomplete="off" data-sbconfig="ds:'no',pjs:'no',afs:'yes'" /></div><button id="search" type="submit" class="button_search nowrap" cmd="go">Search</button></div></div></form><ul class="searchlinks inline_list"><li>
                        <a href="/pmc/advanced/">Advanced</a>
                    </li><li>
                        <a href="/pmc/journals/">Journal list</a>
                    </li><li class="help">
                        <a target="_blank" href="/books/NBK3825/">Help</a>
                    </li></ul></div>
</div>

                            
                            
                        <!--<component id="Page" label="headcontent"/>-->
                            
                        </div>
                        <div class="content">
                            <!-- site messages -->
                            <div class="container">
    <div id="maincontent" class="content eight_col col">
        <div class="navlink-box">
            <ul class="page-breadcrumbs inline_list small"><li class="journal-list"><a href="/pmc/journals/" class="navlink">Journal List</a></li><li class="archive"><a class="navlink" href="/pmc/journals/1741/">Australas Med J</a></li><li class="issue-page"><a class="navlink" href="/pmc/issues/219758/">v.6(1); 2013</a></li><li class="accid">PMC3575060</li></ul>
        </div>

        <!-- Journal banner -->
        <div class="pmc-page-banner whole_rhythm"><div><img src="/corehtml/pmc/pmcgifs/logo-austmj.gif" alt="Logo of austmj" usemap="#logo-imagemap" /><map id="logo-imagemap" name="logo-imagemap"><area alt="Link to Publisher's site" title="Link to Publisher's site" shape="default" coords="0,0,499,74" href="http://www.amj.net.au/index.php?journal=AMJ" target="pmc_ext" ref="reftype=publisher&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CBanner&amp;TO=Publisher%7COther%7CN/A" /></map></div> </div>
        
        <!--component id='MainPortlet' label='search-reference'/-->
        
        <!-- Book content -->
        <div class="">
            
        
            
            <div class="hide-overflow article lit-style content pmc-wm slang-all page-box"><!--main-content--><div class="jig-ncbiinpagenav" data-jigconfig="smoothScroll: false, allHeadingLevels: ['h2'], headingExclude: ':hidden'"><div class="fm-sec half_rhythm no_top_margin"><div class="fm-citation half_rhythm no_top_margin clearfix"><div class="inline_block eight_col va_top"><div><div><span class="cit"><span id="pmcmata">Australas Med J</span>. 2013; 6(1): 7–14. </span></div><div><span class="fm-vol-iss-date">Published online 2013 Jan 31. </span>  <span class="doi">doi: <a href="//dx.doi.org/10.4066%2FAMJ.2013.1576" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CFront%20Matter&amp;TO=Content%20Provider%7CCrosslink%7CDOI">10.4066/AMJ.2013.1576</a></span></div></div></div><div class="inline_block four_col va_top show-overflow align_right"><div class="fm-citation-ids"><div class="fm-citation-pmcid"><span class="fm-citation-ids-label">PMCID: </span><span>PMC3575060</span></div><div class="fm-citation-pmid">PMID: <a href="/pubmed/23424610">23424610</a></div></div></div></div><h1 class="content-title">Going native (or not): Five questions to ask mobile application developers</h1><div class="half_rhythm"><div class="contrib-group fm-author"><a href="/pubmed/?term=White%20J%5BAuthor%5D&amp;cauthor=true&amp;cauthor_uid=23424610">James White</a><sup><img src="/corehtml/pmc/pmcgifs/corrauth.gif" alt="corresponding author" /></sup></div><div style="display:none" class="contrib-group aff-tip"></div></div><div class="fm-panel half_rhythm"><div class="togglers"><a href="#" class="pmctoggle" rid="idm140295391966768_ai">Author information</a> <a href="#" class="pmctoggle" rid="idm140295391966768_cpl">Copyright and License information</a> <a href="/pmc/about/disclaimer/">Disclaimer</a></div><div class="fm-authors-info fm-panel hide half_rhythm" id="idm140295391966768_ai" style="display:none"><div class="fm-affl" lang="en" id="idm140295394562928">Curtin Health Innovation Research Institute, Curtin University</div><div><sup><img src="/corehtml/pmc/pmcgifs/corrauth.gif" alt="corresponding author" /></sup>Corresponding author.</div><div id="COR1">James White Centre of Excellence for Science, Seafood and Health, 9 Parker Place, WA 6102 <a href="mailto:dev@null" data-email="ua.ude.nitruc.dargtsop@etihw.a.semaj" class="oemail">ua.ude.nitruc.dargtsop@etihw.a.semaj</a></div></div><div class="fm-article-notes fm-panel half_rhythm"></div><div class="permissions fm-panel half_rhythm hide" id="idm140295391966768_cpl" style="display:none"><div class="fm-copyright half_rhythm"><a href="/pmc/about/copyright/">Copyright</a> &#x000a9; Australasian Medical Journal</div></div></div><div id="pmclinksbox" class="links-box whole_rhythm hidden"></div></div><div class="sec"></div><div id="s1" class="tsec sec"><h2 class="head no_bottom_margin" id="s1title">Introduction</h2><p id="__p1" class="p p-first">I recently needed a new shovel. At the hardware store I was, as always, taken aback at the range of options available to me, and the range of prices I could pay. Hardware store regulars will know that this is true of everything from lawnmowers to screwdrivers &#x02013; one can pay an incredibly small price, an incredibly large one, or anything in between. In case you are wondering, I chose the second-cheapest shovel, a policy that has served me fairly well over the years. </p><p id="__p2">Shovels, lawnmowers and screwdrivers are easy. We know what we are looking at. We can judge the look and feel, and we know exactly what we will have when we get it home. We may be familiar with the brand, and we will almost certainly be familiar with the materials; we know, for instance, that steel is harder and longer-lasting than plastic, but that it is also heavier in the hand. We can read a list of features, seek help for the items we do not understand, and make an informed choice.</p><p id="__p3">Most health professionals who have ever commissioned a piece of software will know that it is a very different prospect. The healthcare industry is increasingly aware of the opportunities and benefits of information technology. This means that people who have never given a great deal of thought to the development of the software they use, increasingly find themselves discussing large sums of money with people who are wont to enthuse greatly about this or that approach to development, using this or that technology, in language that <em>almost seems like English.</em>
</p><p id="__p4">A colleague of mine recently sought quotes for a mobile application, and received responses ranging from $30,000 to $150,000. What are we to do when faced with such wildly divergent figures? How can we make a choice and have confidence that we will get value for money, that the project will be completed on time and to our specifications, and that we will end up with a quality product that matches our expectations, those of our funders and, most importantly, those of the end users?</p><p id="__p5">There are no easy answers to these questions. But as someone with a foot in both camps &#x02013; I am both a public health researcher and a software developer &#x02013; I have some advice. Specifically, five questions you should ask the next developer who is eager to tell you exactly how you should spend your hard-won project funding. Naturally there are a great many more than five questions that could, and should be asked, but I consider that the majority of them can be formulated and understood by most people, or at least, most people who have ever commissioned <em>anything</em> . You will want to know how experienced the contractor is, and perhaps talk to their previous clients. You will want to know that they have experience in developing applications or &#x0201c;apps&#x0201d; with some commonality with your project. You will ask questions relating to timeframes, extra costs, guarantees, intellectual property and so on. The questions I propose here are related directly to the field of mobile app development, and specifically to the underlying structures with which apps are built &#x02013; their DNA, if you like. To most people &#x0201c;an app is an app&#x0201d;, and although they may be able to judge the good from the bad, they may be less able to pinpoint the characteristics that make it one or the other. These questions may assist in doing so, and in helping to insure that, when complete, your app falls into the former category.</p><p id="__p6" class="p">However I am going to make you, the reader, work a little before giving you the questions. I will begin by describing some essential characteristics of mobile applications, and some important considerations. In digesting this, you will more than likely formulate a list of questions for yourself; you can test your own comprehension by comparing them to mine, which I will provide at the end.</p><div id="s1.1" class="sec"><h3 id="s1.1title">Mobile apps are not born equal</h3><p id="__p7" class="p p-first">Like so many things, there are several ways you could categorise apps. You could reasonably say that there are five basic kinds of app, or three, or 20. I will say here that there are two types, or rather two ends of a spectrum. At one end are <em>native</em> applications and at the other are those variously called <em>web apps , browser apps , or non-native apps</em> . Each has pros and cons, and it is essential to know which your developer is proposing.</p><p id="__p8">Native apps are built with a specific family of devices in mind. Presently, one could build a native app for iOS devices (iPhone, iPad and iPod Touch), for Android devices (a plethora of smartphone and tablet devices made by various manufacturers, which run on an operating system developed and maintained by Google), for Windows-compatible devices (Microsoft&#x02019;s latest Windows operating system is compatible with some third-party smartphones and tablets, as well as Microsoft&#x02019;s own newly released Surface tablets), for Blackberry, or for one of a few smaller players.</p><p id="__p9">Each of these operating systems requires that native apps be built using a particular coding language. For those taking notes, it is <em>Objective-C</em> for iOS, <em>Java</em> for Android, and typically <em>C++</em> or <em>C#</em> for Windows. They also provide a set of protocols for accessing the various interface objects, functions, utilities, aerials and sensors of modern mobile devices. These <em>application programming interfaces</em> (APIs) give developers access to extensive frameworks and tools that are written by the platform curators, specifically for that platform. The use of these APIs for both visual elements and under the hood functionality conveys the native &#x0201c;feel&#x0201d; of an app. In addition, APIs enable developers to build apps which can directly access device features such as cameras, GPS aerial, accelerometer (the sensor that detects the orientation of the device), microphones, and so on. Non-native apps may be able to access some of these features, such as the camera or user location, but they do so using non-optimal methods.</p><p id="__p10">Native apps are distributed directly by the companies which manage the operating systems, such as Apple, Google and Microsoft, via applications stores on the device, or on desktop computers. Upgrades and bug fixes are also managed in this way &#x02013; developers who wish to modify their app must do so via a submission to the relevant application store, and wait whatever time that store takes for approval. Some platforms take a curative approach to distribution, requiring apps to be checked for functionality, security and content before being approved for distribution (Apple has been famously stringent in this respect), while others take a more handsoff approach.</p><p id="__p11">At the other end of the spectrum are non-native web apps, designed to work across many devices and operating systems. They use common languages accessible on all devices, including <em>HyperText Markup Language</em> (HTML) and <em>Javascript,</em> languages used for general web development. These apps are essentially websites that have been optimised for smaller screens, although optimisation is a challenge when the developer is trying to support literally hundreds of different devices, all with different screen sizes, resolutions, central processing units (CPUs) and graphics processing units (GPUs). Users receive a URL address, just as they would for a standard website, and navigate to it using the browser on their device. The operating system and device manufacturers have no control over content or functionality &#x02013; developers may make changes at any time, with immediate effect.</p><p id="__p12">In the middle of the spectrum are so-called <em>hybrid</em> apps, which take web-based functionality and wrap it in native containers. This results in a set of native applications, one for each targeted system, sharing web-driven content. These are distributed via the appropriate application stores and, while some core functionality may only be altered via a new submission, other content may be updated immediately. There are also emerging technologies that enable developers to write an app using a single language, then to translate that code into native code for various devices. Perhaps the fairest thing that can be said about this approach is that &#x0201c;results may vary&#x0201d;. The tools are improving all the time, and there have been some very good apps built using this approach. However, there have also been many that were demonstrably inferior.</p><p id="__p13" class="p p-last">It is very important to be clear about which of these approaches a developer is proposing. It is particularly important when dealing with this last category of hybrid or cross-platform apps, as there is great potential for confusion and misplaced expectation. A developer could say that a hybrid app, built using large amounts of webserved content, using a cross-platform complier, is native &#x02013; it uses <em>some</em> native APIs and is distributed via the appropriate application stores. They could also make the case that this is the best of both worlds, and in some cases they may be right. However, if they <em>are</em> right, it is because this approach is an effective solution to the particular requirements of the app project under discussion. Not because it is the best solution <em>per se</em> . It is vital to understand the advantages and compromises inherent in each approach.</p></div><div id="s1.2" class="sec"><h3 id="s1.2title">Advantages of native development</h3><p id="__p14" class="p p-first">The core advantage of native applications is that they are built according to a set of specifications provided by the operating system manufacturer. These manufacturers provide vast libraries of code which can be used by developers, and this helps to ensure some level of consistency across apps. Buttons, indicators, item choosers and navigation structures may all work consistently from app to app, because they are using the same code base, developed by the stewards of the platform, and refined over time. By contrast, an interface object in a web app may have been designed and coded by anyone, and will vary greatly from app to app.</p><p id="__p15">The consequences of this variability should not be underestimated. It is remarkable to consider the extent that mobile devices have penetrated our daily lives, in a relatively short space of time. Many people use such devices very regularly through the day, for all manner of tasks, and as a consequence the interface of the device itself becomes very familiar to users. This fact is truer for mobile devices than it has ever been for desktop computers. In short, users expect apps to behave in particular ways, and there is an immediate disconnect when they do not. For example, many native mobile apps use a standard navigation structure to move from one screen to another. The device animates smoothly between the views and, because the content is usually embedded in the app, it appears almost instantaneously. Furthermore, the device presents various standard controls for navigating backwards and forwards through content &#x02013; users recognise these controls, and know what to expect when tapping them.</p><p id="__p16">Many web apps try to mimic this design and functionality, but even the very best examples cannot achieve more than an approximation. For one thing, because the content is loaded from the web rather than from within the app, it will typically take more time for new screens to load &#x02013; sometimes significantly more. The experience is much more like viewing a web page, than using a mobile app. There is a school of thought that developers have made a rod for their own back by attempting to imitate native design; by trying but falling short, they have effectively set up false expectations for the user.</p><p id="__p17">The means of loading content leads to another advantage of native development &#x02013; all things being equal, a native app will consume far less data than a non-native, web-based equivalent. That is not to say that native apps consume no data &#x02013; most modern apps, no matter how they are built, will access the Internet for some purpose or another. The critical difference is that, in a web app, <em>everything seen on screen</em> has been downloaded on the fly. By contrast, a native app will include a great deal, and in some cases all, of the data it needs to function, at the time it is first downloaded from the distributor. Some distributors place an arbitrary limit on the size an application can be, if it is to be downloaded over a cellular connection; large apps can only be downloaded over a WI-FI connection. This prevents an app from consuming an excessively large amount of a user&#x02019;s cellular data allowance at the time it is first downloaded. There are no such safeguards with web apps, and this can impact on both performance and cost to the user. It should be noted, however, that good developers will attempt to design web apps with this in mind, and it is certainly possible to develop efficient, fast, data-economic web apps.</p><p id="__p18">Another consequence of the contrasting use of data is that with most native apps it is possible to use some, most, or even all of the app&#x02019;s functionality <em>with no Internet connection at all.</em> The app&#x02019;s content and programming code is contained in the app when it is first downloaded. It may also be programmed to detect the presence or absence of a web connection, and modify itself accordingly. If parts of the app require a connection, but the user is currently offline, the app may hide or modify those functions, or present the user with a notification about the need to be online to use that part of the app. No such niceties exist for web apps; they simply will not work.</p><p id="__p19" class="p p-last">Finally, the use of native APIs enables developers to give users the option of accessing information and services on their device outside of the application they are using. This includes contact lists, calendars, photo and media libraries, and shared credentials (such as those for social media). Apps that enable users to add an event to their calendar, send something to a contact, or use media on their device, typically do so using native APIs.</p></div><div id="s1.3" class="sec"><h3 id="s1.3title">Facebook: A case study (and cautionary tale)</h3><p id="__p20" class="p p-first">Some of the most high-profile mobile applications on any platform are those developed by the social networking behemoth Facebook. This stands to reason, given its enormous user base, and the degree to which social media usage has been one of the biggest drivers of smartphone uptake. Facebook initially chose a predominately web-based structure for its mobile applications. The company distributed apps for various platforms that were essentially native containers full of web content, built using the HMTL5 web standard. HTML5 is the latest set of specifications for <em>HyperText Markup Language</em> , the primary language used in web development. These specifications make it more suited to mobile development, and allow new functionality designed to reduce dependence on outdated technologies. One of the main reasons for Facebook&#x02019;s decision was a desire to be flexible. Facebook is a developer-driven company with a strong preference for agility and quick iteration. In other words, the company likes to try new things often. Some software companies are more cautious, pilot testing and perfecting new features over long periods of time before releasing them to the public. Facebook prefers to quickly develop new features and new ways of presenting content and to trial innovations with some parts of their massive user base before pushing changes out to all users.</p><p id="__p21">This approach is problematic with fully native apps, where changes must be reviewed and approved by the various application curators before going live, a process which can take some time. Furthermore, it is difficult or impossible to make changes for one group of users, but not others, making Facebook&#x02019;s approach to large-scale beta testing unfeasible; if the test process breaks something in the app, it breaks for all 300 million of its mobile users, rather than just a &#x0201c;few&#x0201d; million.</p><p id="__p22">So Facebook took a web-first approach to developing its mobile apps. The resulting apps were almost universally derided as slow, buggy, inconsistent, and prone to frequent crashes. There was some disagreement over why this was &#x02013; the apps were bad because web apps are generically inferior, or simply because they were poorly programmed. Going straight to the source, Mark Zuckerberg, CEO of Facebook, expressed clear thoughts on the issue. He made the following comments at a technology conference in September 2012:</p><blockquote class="pullquote"><p id="__p23">
<em>&#x0201c;The biggest mistake we made as a company was betting too much on HTML5, because it&#x02019;s just not there yet. We had to start over and rewrite everything to be native. We burned two years. It may turn out it was one of the biggest if not the biggest strategic mistake [we made]&#x02026;We believed that because it used the same technology as the desktop, we thought it could improve. But it wasn&#x02019;t good enough. We realised the only way we could get there was to go native.&#x0201d; </em>
<sup><a href="#R01" rid="R01" class=" bibr popnode">1</a></sup>
</p></blockquote><p id="__p24">So Facebook began from scratch, building new, platformspecific native applications. The iOS version was released in August 2012, and showed a vast improvement in speed (up to twice as fast), stability and device integration.<sup><a href="#R02" rid="R02" class=" bibr popnode">2</a></sup> Of course, the actual content (users&#x02019; posts, comments, photos, video and so on) is still delivered via the web. The difference was that the scaffolding containing this content was written natively, and the tools used for accessing things like the device camera and GPS aerial, were built using native APIs. At the time of writing, a native Android application remains under development. On the day the new, native iOS application was released Mick Johnson, Facebook&#x02019;s iOS product manager, said:</p><blockquote class="pullquote"><p id="__p25">
<em>&#x0201c;A native Facebook iOS app has been arguably the most-wanted app on the planet. It doesn't look much different, but should satisfy the hundreds of millions of users begging for an experience that isn't cripplingly slow.&#x0201d;</em> 2</p></blockquote><p id="__p26" class="p p-last">Consider that the phrase &#x0201c;cripplingly slow&#x0201d; referred to his company&#x02019;s own product that was, just the day before this statement, used by more than a hundred million users as a primary access point for Facebook&#x02019;s content. This is a telling statement indeed.</p></div><div id="s1.4" class="sec"><h3 id="s1.4title">All native, all the time?</h3><p id="__p27" class="p p-first">It may appear at this juncture that I am advocating native app development exclusively, for all mobile application projects. I am not. I have described the native/web app distinction as a spectrum. This is truer today than ever before; the line between the two is becoming increasingly blurred. Facebook&#x02019;s new applications are not entirely native; the content is of a necessity delivered via the web, and some parts of the app are still built using HTML5, to enable regular updating. However, their apps are now considerably <em>more native</em> than they were before.</p><p id="__p28" class="p">Some apps will always be more suited to web or hybrid development than others, and it is not always easy to know when this is the case. However, there are a few considerations that may help in the analysis; characteristics of apps, which may mean they may be suited to development as a web or hybrid app:</p><ol class="enumerated" style="list-style-type:decimal"><!--
list-behavior=enumerated
prefix-word=
mark-type=decimal
max-label-size=0
--><li><p id="__p29">
<strong>Apps which have a lot of content that must be delivered via the web.</strong> Some apps need regular or even constant content updates &#x02013; Facebook and Twitter are good examples. In this case native development has fewer advantages, with respect to download speed and impact on a user&#x02019;s download quota. The app will need to retrieve data no matter how it is built. Furthermore, users will need to have an active connection to use the core functionality of the app. However, the lesson from the Facebook story is that, even with an app that is primarily based on web content, it is risky to build the structures that display that content non-natively.</p></li><li><p id="__p30">
<strong>Apps that need to be updated regularly and quickly.</strong> Web and hybrid apps have much greater flexibility, and no one needs to monitor or approve content or structural changes, aside from the developers and content managers themselves. It should be noted, however, that the time taken for native app approval is not unduly long in most cases. At the time of writing, the average approval time for the Apple iOS App Store was estimated at 8.35 days.<sup><a href="#R03" rid="R03" class=" bibr popnode">3</a></sup> Google&#x02019;s Play Store, for Android, takes a less-curative approach, and apps are often approved on the same day, sometimes within the hour.</p></li><li><p id="__p31">
<strong>Apps with a customised user interface. </strong>If you use a smartphone, consider the apps on it. In particular, consider the apps it came with pre-installed. You may not even think of these as &#x0201c;apps&#x0201d; - the phone dialer, the address book, the email client, the music player, and so on. These apps share common elements such as tab bars, buttons, content choosers and navigation structures. These apps, and the common structures, were built by the company which developed your device&#x02019;s operating system &#x02013; Apple if it is an iPhone, Google if it is an Android phone, and so on. Now consider the other apps &#x02013; the ones you chose to download. Some of those apps have similarities with the inbuilt ones &#x02013; tools and structures where the developer has chosen to use the native APIs. Some will have less in common, and some will have nothing in common at all &#x02013; they are said to have a completely custom user interface. Generally speaking, utility apps that have roughly similar kinds of features to the inbuilt apps tend to use somewhat standard interfaces (although many do not, and the number continues to grow). Games, on the other hand, tend to be entirely customised. As noted above, web or hybrid apps that try to replicate native user interfaces often do so poorly. Apps, like games, which have their own unique look and feel do not need to be concerned with this; they actually benefit from a consistent look from one device family to another, and a non-native approach to development may be entirely appropriate.</p></li><li><p id="__p32">Apps which must be accessible to the widest possible number of users, and where this must be achieved within a limited budget. The various options for nonnative development can make it feasible to develop for multiple platforms relatively cheaply, thus <em>theoretically</em> making it available to the largest number of potential users.</p></li></ol></div><div id="s1.5" class="sec"><h3 id="s1.5title">Potential users are not users (yet)</h3><p id="__p33" class="p p-first">The italics in the last sentence are significant, and this serves as a segue into an important final point. It stands to reason that someone developing an application would typically want as many people as possible to use it. We place great significance on the size of the user base, taking it as one way of validating the project and justifying its expense. The app may have features that rely to some extent on the number of users, and of course if there is a commercial aspect, then the level of uptake will have a significant impact on the product&#x02019;s viability. In the health field, additional pressures may come to bear. The funders may require that the service be universally accessible to all potential users. While the goal of gaining as many users as possible is perfectly reasonable, here are two important things to consider.</p><ol class="enumerated" style="list-style-type:decimal"><!--
list-behavior=enumerated
prefix-word=
mark-type=decimal
max-label-size=0
--><li><p id="__p34">
<strong>Smartphone users &#x02260; app users.</strong> By &#x0201c;app users&#x0201d; here I mean people who are actively engaged with the third-party application ecosystem of their chosen device platform. People who are confident with the process of finding and installing apps on their device, who explore apps, act on recommendations to try this or that app, or generally have the inclination to wonder if an app exists for any particular need or problem they may have.</p><p id="__p35">Users of the different mobile platforms display very different patterns of use. A study in June 2012<sup><a href="#R04" rid="R04" class=" bibr popnode">4</a></sup> compared the two dominant platforms, iOS (Apple) and Android (Google), and found iOS users to be 52% more likely to retain an app on their device than Android users. On average, 35% of iOS users launched an app more than ten times after downloading it, compared to 23% for Android users. Users of iOS also displayed a lower rate of one-time usage &#x02013; instances where they installed an app, opened it once, and never used it again. Another telling statistic is the rate at which iOS users keep their devices up-to-date with the latest version of the operating system. Apple released iOS6, the latest upgrade to its operating system, in September 2012. In just the first week of availability, 100 million devices &#x02013; around a quarter of those in use &#x02013; had been upgraded. Fifteen per cent of devices were upgraded in the first 24 hours alone. The current install base is estimated at around 60%.<sup><a href="#R05" rid="R05" class=" bibr popnode">5</a></sup> In contrast, at the time of writing Google estimates that just 1.8% of Android devices run the latest version, released in June 2012.<sup><a href="#R06" rid="R06" class=" bibr popnode">6</a></sup> Running dated versions of the operating system limits the range of apps that can be installed. Prudent developers must ensure their apps are backwards compatible, meaning that in many cases they must eschew the use of the latest and greatest features of the platform.</p><p id="__p36">There are several reasons for this discrepancy. The iOS platform had a head start of several years, and became commercially lucrative for application developers in a relatively short space of time. This meant that a great many developers began, and continue, to develop for the platform, leading to a wide range of apps available for consumers. Apple&#x02019;s curative approach to application approval also meant that, at least initially, the quality of apps was relatively high &#x02013; although the rapid growth of the platform, and the sheer number of new applications being submitted for distribution has led to something of a decline in the stringent enforcement of standards. This has led to a self-perpetuating cycle in the iOS app ecosystem. Users came to expect a wide selection of high-quality apps, therefore they became more likely to explore and use new apps, therefore the platform became more appealing for developers; rinse and repeat.</p><p id="__p37">In contrast, the Android platform continues to grow in popularity, but has not yet achieved the kind of app ecosystem that exists for iOS. This may be a factor of the lower barrier to entry (leading to a comparatively higher proportion of low quality apps), the greater difficulty in monetising apps (it is much easier to download an Android app illegally, for free, than one for iOS) or the fact that Android developers have a much more difficult task optimising applications to the myriad devices they must support. Often the most realistic strategy is to take a &#x0201c;lowest common denominator&#x0201d; approach to ensure that apps work across the widest range of devices, running the widest range of operating system versions. This impacts on quality and perpetuates the problem of app engagement and commercial viability.</p><p id="__p38">Finally, Android devices typically cost less and are more likely to be fully subsidised by the telephone carrier. As it becomes increasingly difficult to find a mobile phone that is not a smartphone, many people may find themselves owning an Android device almost by default. They simply wanted to purchase a new phone, have no intention to engage in app use or any other use aside from making calls and sending SMS messages, and were sold an Android device as the least expensive option (and often the one with the largest sales commission).</p><p id="__p39">All of this adds up to the fact that, in estimating a potential user base, and deciding on platforms to support, it is important to not simply look at usage statistics in isolation. So, although Android recently reached parity with iOS in terms of Australian user base (38% of all mobile phones, compared with 37% for iOS),<sup><a href="#R07" rid="R07" class=" bibr popnode">7</a></sup> it is not a given that half of a given app&#x02019;s user base will be on the Android platform. The picture is far more complex than this.</p></li><li><p id="__p40">Everything is a trade-off. Even given the above, it may be tempting to think that there is nothing to lose in cross-platform development. Even if users on a given platform may be less likely to find and use the app, at least it is theoretically available to them. When you add in the fact that, in some cases, native development may be more expensive, it may almost be considered a &#x0201c;no-brainer&#x0201d;.</p><p id="__p41">But once again, it is important to consider the implications. Developing an application capable of functioning on a wide range of devices requires compromises. Each of those devices has different specifications and capabilities, and non-native development will often involve the &#x0201c;lowest common denominator&#x0201d; approach described above, to deal with these differences. Application art &#x02013; graphics, images, buttons and so on &#x02013; may need to stretch to accommodate different screen sizes and resolutions, and this will typically lead to an inferior visual experience. Alternatively certain kinds of art may need to be avoided altogether. Developers will need to trade off performance and robustness &#x02013; optimising the app for high performance may mean it is likely to be &#x0201c;buggy&#x0201d; on devices with lower capabilities, while opting for &#x0201c;safety-first&#x0201d; could mean the app has poor performance, even on higher-spec devices.</p><p id="__p42">These compromises may make an app less palatable for users, who have come to expect a high standard in mobile software. The danger is that, in trying to maximise your potential user base, you have effectively limited your reach by creating a compromised product. When Facebook delivered a substandard mobile app, hundreds of millions of people still used it because they wanted to access the service via mobile and, to them, subpar was better than nothing. It is fair to assume that health professionals looking to develop a mobile application do not begin with an existing user base of a billion people.</p><p id="__p43">Consider this analogy. You are developing a general purpose printed health resource. It is suggested that you use an extra-large type size, to make the material accessible for older people or people with limited sight. The argument is that doing this will maximise the number of people who may potentially access the information, and that &#x0201c;there&#x02019;s nothing to lose&#x0201d;, because people with normal sight can still use it. However, doing this will involve compromises. If space is limited (say, in a brochure) images may have to be omitted, or reduced in size, to accommodate the text, and this may reduce the resource&#x02019;s impact. If it is not, the resource may become much larger, impacting on production cost and potential acceptability. If it is intended as a quick read for a GP&#x02019;s waiting room, and it appears to be very substantial, it may be less likely to be used. A decision in this case needs to be based on a clear understanding of the core target audience, the likelihood of various categories of people using the resource, and any other options for accessing the information.</p><p id="__p44">My point here is that, although in general terms maximising accessibility is a worthwhile goal, it is not a simple calculation to make. If this is true for print resources, it is especially true for software, where so many more variables are at play.</p></li></ol></div><div id="s1.6" class="sec sec-last"><h3 id="s1.6title">Conclusion (and, finally, the five questions)</h3><p id="__p45" class="p p-first">Mobile technology provides many opportunities for health professionals, service providers and health promoters. It is immediately accessible, is quickly becoming ubiquitous, and is increasingly turned to by Australians for all manner of information, including health information.</p><p id="__p46">However, the process of contracting developers to build software can be fraught. Quotes can vary wildly &#x02013; to the extent that it can be possible to wonder if different developers are proposing to build entirely different things. In fact, this is a pertinent question to ask, because this may very well be the case. Software development is not an &#x0201c;A+B=C&#x0201d; equation. When presented with a particular task (your application concept), a developer must choose from a multitude of different ways to accomplish that task, taking into consideration another multitude of variables. Not dissimilar to what a GP would have to do when asked the question, &#x0201c;Can you help me to be healthier?&#x0201d;</p><p id="__p47">There are many questions that can assist in understanding and comparing proposals from different developers. Some are obvious, and can easily be understood by people with no experience in software development &#x02013; what are the timeframes, how experienced are the developers, what hourly rate is being proposed, what guarantees are involved, who owns the final product, and so on. But in the case of mobile software, I have made the case that there are other important questions that relate to the core DNA of an application.</p><p id="__p48">So, then, the questions.</p><ol class="enumerated" style="list-style-type:decimal"><!--
list-behavior=enumerated
prefix-word=
mark-type=decimal
max-label-size=0
--><li><p id="__p49">Are you proposing to build this as a native or web application?</p></li><li><p id="__p50">If it is to be a native application, is it genuinely native (i.e. written in a platform specific language) or cross-compiled (written using a third-party tool, then outputted for a range of devices)?</p></li><li><p id="__p51">Which platforms will be supported, and why?</p></li><li><p id="__p52">Why do you think this is the best approach?</p></li><li><p id="__p53">What compromises will you need to make, in order to build using this approach?</p></li></ol><p id="__p54">Of course, answers to these questions will not provide a straightforward answer to the pivotal one &#x02013; &#x0201c;which of these proposals should I choose?&#x0201d; But the responses should assist in weighing up proposals and making educated guesses at the potential quality, reach and appeal for a given application. There are no right answers, but some are better than others. Generally speaking, &#x0201c;that&#x02019;s the only way we know how&#x0201d;, &#x0201c;that&#x02019;s the cheapest way&#x0201d;, or &#x0201c;I don&#x02019;t really know&#x0201d; should be considered with caution.</p><p id="__p55" class="p p-last">If nothing else, having a conversation that goes deeper than the practicalities of the application at hand, and touches on the developer&#x02019;s underlying philosophy and approach to development, should provide insight into their knowledge and professionalism. Even if you do not understand everything they say, you will come away with a sense of the degree to which they &#x0201c;know what they&#x02019;re talking about&#x0201d;. You may even gain some understanding of just what kind of shovel you&#x02019;re about to buy.</p></div></div><div id="idm140295424119616" class="tsec sec"><h2 class="head no_bottom_margin" id="idm140295424119616title">ACKNOWLEDGEMENTS</h2><div class="sec"><p id="__p56">The author acknowledges the contribution of Mr. Adam Shaw, who provided technical advice on some aspects of this paper.</p></div></div><div id="idm140295427858048" class="tsec sec"><h2 class="head no_bottom_margin" id="idm140295427858048title">Footnotes</h2><!--back/fn-group--><div class="fm-sec half_rhythm small"><p class="fn sec" id="FN1"><p id="__p57" class="p p-first">
<strong>PEER REVIEW</strong>
</p><p id="__p58" class="p p-last">Not commissioned. Externally peer reviewed.</p></p><p class="fn sec" id="FN2"> <p id="__p59" class="p p-first">
<strong>CONFLICTS OF INTEREST</strong>
</p><p id="__p60" class="p p-last">The author works as an application developer, and consultant, on a contractual basis.</p></p><p class="fn sec" id="FN3"><p id="__p61" class="p p-first-last">Please cite this paper as: White, J. Going native (or not): Five questions to ask mobile application developers. AMJ 2013, 6, 1, 7-14.<a href="http://http//dx.doi.org/10.4066/AMJ.2013.1576" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CBody&amp;TO=External%7CLink%7CURI" target="_blank">http//dx.doi.org/10.4066/AMJ.2013.1576</a>
</p></p></div></div><div id="idm140295412239488" class="tsec sec"><h2 class="head no_bottom_margin" id="idm140295412239488title">References</h2><div class="ref-list-sec sec" id="reference-list"><div class="ref-cit-blk half_rhythm" id="R01">1. <span class="element-citation">Forbes. Facebook CEO Mark Zuckerberg: We Burned Two Years Betting On Mobile Web Vs. Apps. 2012. <span></span> [cited 15 November 2012]. Available from:  <a href="http://www.forbes.com/sites/roberthof/2012/09/11/mark-zuckerberg-we-burnt-two-years-betting-on-mobileweb-vs-apps/" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://www.forbes.com/sites/roberthof/2012/09/11/mar k-zuckerberg-we-burnt-two-years-betting-on-mobileweb- vs-apps/.</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Forbes.+Facebook+CEO+Mark+Zuckerberg:+We+Burned+Two+Years+Betting+On+Mobile+Web+Vs.+Apps.+2012+[cited+15+November+2012].+Available+from:++http://www.forbes.com/sites/roberthof/2012/09/11/mar+k-zuckerberg-we-burnt-two-years-betting-on-mobileweb-+vs-apps/.+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div><div class="ref-cit-blk half_rhythm" id="R02">2. <span class="element-citation">Hamburger E. Facebook for iOS goes native, waves goodbye to HTML 5. <span></span> [cited 20 November 2012]. Available from: <a href="http://www.theverge.com/2012/8/23/3262782/facebook-forios-native-app" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://www.theverge.com/2012/8/23/3262782/facebook-forios-native-app.</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Hamburger+E+Facebook+for+iOS+goes+native,+waves+goodbye+to+HTML+5.+[cited+20+November+2012].+Available+from:+http://www.theverge.com/2012/8/23/3262782/facebook-forios-native-app.+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div><div class="ref-cit-blk half_rhythm" id="R03">3. <span class="element-citation">Shiny Development. Average App Store Review Times. <span>2012</span> [cited 22 November 2012]. Available from: <a href="http://reviewtimes.shinydevelopment.com" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://reviewtimes.shinydevelopment.com.</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Shiny+Development+Average+App+Store+Review+Times+2012+[cited+22+November+2012].+Available+from:+http://reviewtimes.shinydevelopment.com.+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div><div class="ref-cit-blk half_rhythm" id="R04">4. <span class="element-citation">Localytics. App Retention Increasing; iPhone Ahead of Android. <span>2012</span> [cited 15 November 2012]. Available from: <a href="http://www.localytics.com/blog/2012/app-user-loyaltyincreasing-ios-beats-android/" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://www.localytics.com/blog/2012/app-user-loyaltyincreasing-ios-beats-android/.</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Localytics.+App+Retention+Increasing;+iPhone+Ahead+of+Android.+2012+[cited+15+November+2012].+Available+from:+http://www.localytics.com/blog/2012/app-user-loyaltyincreasing-ios-beats-android/.+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div><div class="ref-cit-blk half_rhythm" id="R05">5. <span class="element-citation">Chitika Insights. 60% of iPhones on iOS 6, iPad and iPod Touch Close Behind. <span>2012</span> [cited 15 November 2012]. Available from: <a href="http://www.zdnet.com/60-percent-ofiphones-now-running-ios-6-report-7000005169/" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://www.zdnet.com/60-percent-ofiphones-now-running-ios-6-report-7000005169/</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Chitika+Insights.+60%+of+iPhones+on+iOS+6,+iPad+and+iPod+Touch+Close+Behind.+2012+[cited+15+November+2012].+Available+from:+http://www.zdnet.com/60-percent-ofiphones-now-running-ios-6-report-7000005169/+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div><div class="ref-cit-blk half_rhythm" id="R06">6. <span class="element-citation">Kingsley-Hughes A. Android 4.1 'Jelly Bean' reaches 1.8 percent market share. <span>2012</span> [cited 20 November 2012]. Available from: <a href="http://www.zdnet.com/android-4-1-jellybean-reaches-1-8-percent-market-share-7000005096/" data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://www.zdnet.com/android-4-1-jellybean-reaches-1-8-percent-market-share-7000005096/.</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Kingsley-Hughes+A+Android+4.1+'Jelly+Bean'+reaches+1.8+percent+market+share.+2012+[cited+20+November+2012].+Available+from:+http://www.zdnet.com/android-4-1-jellybean-reaches-1-8-percent-market-share-7000005096/.+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div><div class="ref-cit-blk half_rhythm" id="R07">7. <span class="element-citation">Marketing Magazine. Android dethrones iPhone as most owned smartphone platform in Australia. <span>2012</span> [cited 20 November 2012]. Available from: <a href="http://www.marketingmag.com.au/news/android-dethronesiphone-as-most-owned-smartphone-platform-in-australia-17252/-.ULMXd6XHYld." data-ga-action="click_feat_suppl" ref="reftype=extlink&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=External%7CLink%7CURI" target="_blank">http://www.marketingmag.com.au/news/android-dethronesiphone-as-most-owned-smartphone-platform-in-australia-17252/ - .ULMXd6XHYld.</a> <span class="nowrap">[<a href="https://scholar.google.com/scholar?q=Marketing+Magazine+Android+dethrones+iPhone+as+most+owned+smartphone+platform+in+Australia.+2012+[cited+20+November+2012].+Available+from:+http://www.marketingmag.com.au/news/android-dethronesiphone-as-most-owned-smartphone-platform-in-australia-17252/+-+.ULMXd6XHYld.+" target="pmc_ext" ref="reftype=other&amp;article-id=3575060&amp;issue-id=219758&amp;journal-id=1741&amp;FROM=Article%7CCitationRef&amp;TO=Content%20Provider%7CLink%7CGoogle%20Scholar">Google Scholar</a>]</span></span></div></div></div></div><!--post-content--><div class="courtesy-note whole_rhythm small"><hr />Articles from <span class="acknowledgment-journal-title">The Australasian Medical Journal</span> are provided here courtesy of <strong>Australasian Medical Journal</strong></div></div>
            
            
        
            
        </div>
        <!-- Book content -->
    </div>
    
    <div id="rightcolumn" class="four_col col last">
        <!-- Custom content above discovery portlets -->
        <div class="col6">
            
        </div>
        
        <div xmlns:np="http://ncbi.gov/portal/XSLT/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><div class="format-menu"><h2>Formats:</h2><ul><li class="selected">Article</li> | <li><a href="/pmc/articles/PMC3575060/?report=reader">PubReader</a></li> | <li class="epub-link"><a href="/pmc/articles/PMC3575060/epub/">ePub (beta)</a></li> | <li><a href="/pmc/articles/PMC3575060/pdf/AMJ-06-07.pdf">PDF (173K)</a></li> | <li><a href="#" data-citationid="PMC3575060" class="citationexporter ctxp">Citation</a></li></ul></div></div><div xmlns:np="http://ncbi.gov/portal/XSLT/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" class="share-buttons"><h2>Share</h2><ul><li class="facebook"><a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC3575060%2F"><img src="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/img/4047626" alt="Share on Facebook" />
                             Facebook
                        </a></li><li class="twitter"><a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC3575060%2F&amp;text=Going%20native%20(or%20not)%3A%20Five%20questions%20to%20ask%20mobile%20application%20developers"><img src="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/img/4047627" alt="Share on Twitter" />
                             Twitter
                        </a></li><li class="gplus"><a href="https://plus.google.com/share?url=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC3575060%2F"><img src="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/img/4047628" alt="Share on Google Plus" />
                             Google+
                        </a></li></ul></div>
        
        <div id="ajax-portlets" data-pmid="23424610" data-aiid="3575060" data-aid="3575060" data-iid="219758" data-domainid="1741" data-domain="austmj" data-accid="PMC3575060" data-md5="c7e71ffb6c8adba08078183b16b5b8d0"></div>
                
        <!-- Custom content below discovery portlets -->
        <div class="col7">
            
        </div>
    </div>
</div>

<!-- Custom content after all -->
<div class="col8">
    
</div>
<div class="col9">
    
</div>

<script src="/corehtml/pmc/js/jquery.scrollTo-1.4.2.js"></script>
<script>
    (function($){
        $('.skiplink').each(function(i, item){
            var href = $($(item).attr('href'));
            href.attr('tabindex', '-1').addClass('skiptarget'); // ensure the target can receive focus
            $(item).on('click', function(event){
                event.preventDefault();
                $.scrollTo(href, 0, {
                    onAfter: function(){
                        href.focus();
                    }
                });
            });
        });
    })(jQuery);
</script>



<div id="body-link-poppers"></div>
                        </div>
                        <div class="bottom">
                            
                            <div id="NCBIFooter_dynamic">
    <a id="help-desk-link" class="help_desk" href="" target="_blank">Support Center</a>
    <a id="help-desk-link" class="help_desk" href="https://support.ncbi.nlm.nih.gov/ics/support/KBList.asp?Time=2019-09-19T11:18:29-04:00&amp;Snapshot=%2Fprojects%2FPMC%2FPMCViewer@4.46&amp;Host=portal101&amp;ncbi_phid=CE888174D83964110000000004BA02CB&amp;ncbi_session=CE888174D839C441_1210SID&amp;from=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC3575060%2F&amp;Db=pmc&amp;folderID=132&amp;Ncbi_App=pmc&amp;Page=literature&amp;style=classic&amp;deptID=28049" target="_blank">Support Center</a>
    
</div>

                            <div class="footer" id="footer">
    
    <div class="subfooter"> </div><script type="text/javascript" src="/portal/portal3rc.fcgi/static/js/preloaderWidget.js"> </script>
    <div id="external-disclaimer" class="offscreen_noflow">
        External link. Please review our <a href="https://www.nlm.nih.gov/privacy.html">privacy policy</a>.
    </div>    
    <div id="ncbifooter" class="contact_info">      
        <div id="footer-contents-right">
            <div id="nlm_thumb_logo">
                <a href="https://www.nlm.nih.gov" title="NLM">NLM</a>
            </div>
            <div id="nih_thumb_logo">
                <a href="https://www.nih.gov" title="NIH">NIH</a>
            </div>
            <div id="hhs_thumb_logo">
                <a href="https://www.hhs.gov" title="DHHS">DHHS</a>
            </div>
            <div id="usagov_thumb_logo">
                <a href="https://www.usa.gov" title="USA.gov">USA.gov</a>
            </div>         
        </div>
        
        <div id="footer-contents-left">
            <p class="address vcard">
                <span class="url">
                    <a class="fn url newdomain" href="https://www.ncbi.nlm.nih.gov">National Center for
                        Biotechnology Information</a>,
                </span> <span class="org url newdomain"><a href="https://www.nlm.nih.gov/">U.S. National Library of Medicine</a></span>
                <span class="adr">
                    <span class="street-address">8600 Rockville Pike</span>, <span class="locality">Bethesda</span>
                    <span class="region">MD</span>, <span class="postal-code">20894</span>
                    <span class="country-name">USA</span>
                </span>
            </p>
            
            <a href="/home/about/policies.shtml">Policies and Guidelines</a> | <a href="/home/about/contact.shtml">Contact</a>
        </div>
    </div>
    <script type="text/javascript" src="/portal/portal3rc.fcgi/rlib/js/InstrumentOmnitureBaseJS/InstrumentNCBIConfigJS/InstrumentNCBIBaseJS/InstrumentPageStarterJS.js?v=1"> </script>    
    <script type="text/javascript" src="/portal/portal3rc.fcgi/static/js/hfjs2.js"> </script>
</div>
                        </div>
                    </div>
                    <!--/.page-->
                </div>
                <!--/.wrap-->
            </div><!-- /.twelve_col -->
        </div>
        <!-- /.grid -->

        <span class="PAFAppResources"></span>
        
        <!-- BESelector tab -->
        
        
        
        <noscript><img alt="statistics" src="/stat?jsdisabled=true&amp;ncbi_db=pmc&amp;ncbi_pdid=article&amp;ncbi_acc=&amp;ncbi_domain=austmj&amp;ncbi_report=record&amp;ncbi_type=fulltext&amp;ncbi_objectid=&amp;ncbi_pcid=/articles/PMC3575060/&amp;ncbi_app=pmc" /></noscript>
        
        
        <!-- usually for JS scripts at page bottom -->
        <!--<component id="PageFixtures" label="styles"></component>-->
    

<!-- CE888174D839C441_1210SID /projects/PMC/PMCViewer@4.46 portal101 v4.1.r585844 Mon, May 06 2019 02:53:16 -->

<script type="text/javascript" src="//static.pubmed.gov/portal/portal3rc.fcgi/4160049/js/3879255/4121861/3818874/4168176/3821238/4117325/4087685/4072593/4076480/3921943/4105668/4065628.js" snapshot="pmc"></script></body>
</html>